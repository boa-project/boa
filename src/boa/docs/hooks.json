{
  "node.meta_change":{
    "DESCRIPTION":"Triggered when a node has its metadata updated, but the path and content remain unchanged.",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"The node which metadata was changed."
      }
    ],
    "PARAMETER_SAMPLE":"array($node)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Xml\/ManifestNode.class.php",
        "LINE":174
      },
      {
        "FILE":"\/src\/Core\/Xml\/ManifestNode.class.php",
        "LINE":192
      },
      {
        "FILE":"\/plugins\/meta.user\/UserMetaManager.class.php",
        "LINE":213
      },
      {
        "FILE":"\/plugins\/meta.lom\/LomMetaManager.class.php",
        "LINE":213
      }
    ],
    "LISTENERS":[
      {
        "PLUGIN_ID":"index.lucene",
        "METHOD":"updateNodeIndexMeta"
      }
    ]
  },
  "node.info":{
    "DESCRIPTION":"Main hook called when loading a node. Used at various layers to enrich the node metadata, from the storage to the user metadata or the versioning.",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Node to load"
      },
      {
        "NAME":"context_node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Optionally, can pass the parent node (when node is loaded during a children loop) to carry some information for the various callbacks."
      },
      {
        "NAME":"details",
        "TYPE":"String",
        "DESCRIPTION":"A level of details that can be loaded by the node, to let some plugins skip their loading depending on this parameter. Either 'minimal' or a list of metadata to be loaded."
      }
    ],
    "PARAMETER_SAMPLE":"array(&$this, $contextNode, $details)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Xml\/ManifestNode.class.php",
        "LINE":269
      }
    ],
    "LISTENERS":[
      {
        "PLUGIN_ID":"access.fs",
        "METHOD":"loadNodeInfo"
      },
      {
        "PLUGIN_ID":"access.imap",
        "METHOD":"enrichMetadata"
      },
      {
        "PLUGIN_ID":"meta.user",
        "METHOD":"extractMeta"
      },
      {
        "PLUGIN_ID":"action.share",
        "METHOD":"nodeSharedMetadata"
      },
      {
        "PLUGIN_ID":"gui.ajax",
        "METHOD":"nodeBookmarkMetadata"
      },
      {
        "PLUGIN_ID":"access.dco",
        "METHOD":"loadNodeInfo"
      }
    ]
  },
  "user.before_create":{
    "DESCRIPTION":"Triggered before creating a new user.",
    "PARAMETERS":[
      {
        "NAME":"user_id",
        "TYPE":"String",
        "DESCRIPTION":"The id of the new user"
      },
      {
        "NAME":"user_pass",
        "TYPE":"String",
        "DESCRIPTION":"The password of the new user"
      },
      {
        "NAME":"is_admin",
        "TYPE":"boolean",
        "DESCRIPTION":"The id of the new user"
      }
    ],
    "PARAMETER_SAMPLE":"array($userId, $userPass, $isAdmin)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Services\/AuthService.class.php",
        "LINE":745
      }
    ],
    "LISTENERS":[
      
    ]
  },
  "user.after_create":{
    "DESCRIPTION":"Triggered after having created a new user.",
    "PARAMETERS":[
      {
        "NAME":"user_object",
        "TYPE":"BoA\\Plugins\\Core\\Conf\\AbstractUser",
        "DESCRIPTION":"The newly created user object"
      }
    ],
    "PARAMETER_SAMPLE":"array($userObject)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Services\/AuthService.class.php",
        "LINE":776
      },
      {
        "FILE":"\/plugins\/action.share\/ShareCenter.class.php",
        "LINE":1049
      }
    ],
    "LISTENERS":[
      
    ]
  },
  "user.before_delete":{
    "DESCRIPTION":"Triggered before deleting a user.",
    "PARAMETERS":[
      {
        "NAME":"user_id",
        "TYPE":"String",
        "DESCRIPTION":"The id of the new user"
      }
    ],
    "PARAMETER_SAMPLE":"array($userId)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Services\/AuthService.class.php",
        "LINE":804
      }
    ],
    "LISTENERS":[
      
    ]
  },
  "user.after_delete":{
    "DESCRIPTION":"Triggered after deleting a user.",
    "PARAMETERS":[
      {
        "NAME":"user_id",
        "TYPE":"String",
        "DESCRIPTION":"The id of the new user"
      }
    ],
    "PARAMETER_SAMPLE":"array($userId)",
    "TRIGGERS":[
      {
        "FILE":"\/src\/Core\/Services\/AuthService.class.php",
        "LINE":812
      }
    ],
    "LISTENERS":[
      
    ]
  },
  "msg.instant":{
    "DESCRIPTION":"Apply this hook with some XML content to send message to the client queue.",
    "PARAMETERS":[
      {
        "NAME":"message_content",
        "TYPE":"String",
        "DESCRIPTION":"XML content to be sent in the message"
      },
      {
        "NAME":"repository_id",
        "TYPE":"String",
        "DESCRIPTION":"Id of the repository : this message will only be transmitted to client registered to this repository"
      }
    ],
    "PARAMETER_SAMPLE":"array(\"<reload_shared_elements\/>\", ConfService::getRepository()->getId())",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/core.conf\/AbstractConfDriver.class.php",
        "LINE":525
      },
      {
        "FILE":"\/plugins\/action.share\/ShareCenter.class.php",
        "LINE":197
      },
      {
        "FILE":"\/plugins\/action.share\/ShareCenter.class.php",
        "LINE":343
      }
    ],
    "LISTENERS":[
    ]
  },
  "node.before_path_change":{
    "DESCRIPTION":"Triggered before a node is about to be moved. Neither its metadata or content are will be changed.",
    "PARAMETERS":[
      {
        "NAME":"old_node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Node pointing to the original path"
      },
      {
        "NAME":"new_node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Node pointing to the target path"
      },
      {
        "NAME":"copy",
        "TYPE":"boolean",
        "DESCRIPTION":"Whether this is a copy (true) or a move (false)"
      }
    ],
    "PARAMETER_SAMPLE":"array(new BoA\\Core\\Xml\\ManifestNode($origFile))",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1419
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1591
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1608
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1743
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1769
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1833
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1886
      },
      {
        "FILE":"\/plugins\/core.access\/AbstractAccessDriver.class.php",
        "LINE":161
      }
    ],
    "LISTENERS":[
      {
        "PLUGIN_ID":"action.share",
        "METHOD":"updateNodeSharedData"
      }
    ]
  },
  "node.change":{
    "DESCRIPTION":"Triggered after a node content is updated.",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"New node pointing to the original path"
      }
    ],
    "PARAMETER_SAMPLE":"array(&$node)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":309
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":377
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":677
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":710
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1421
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1475
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1508
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1541
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1602
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1611
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1628
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1823
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1888
      },
      {
        "FILE":"\/plugins\/core.access\/AbstractAccessDriver.class.php",
        "LINE":187
      },
      {
        "FILE":"\/plugins\/core.access\/AbstractAccessDriver.class.php",
        "LINE":195
      }
    ],
    "LISTENERS":[
      {
        "PLUGIN_ID":"meta.user",
        "METHOD":"updateMetaLocation"
      }
    ]
  },
  "node.before_create":{
    "DESCRIPTION":"Triggered before creating a node at a given location.",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"A simple node containing the target path to create. Callback can trigger a Break Exception to prevent the node creation."
      }
    ],
    "PARAMETER_SAMPLE":"array($destFile)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":303
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":502
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":617
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1483
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1557
      },
      {
        "FILE":"\/plugins\/core.access\/AbstractAccessDriver.class.php",
        "LINE":171
      }
    ],
    "LISTENERS":[
    ]
  },
  "node.read":{
    "DESCRIPTION":"Triggered when either reading the content of a leaf (file) node, or when browsing the content of collection (folder) node.",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"The node opened."
      }
    ],
    "PARAMETER_SAMPLE":"array(&$parentAjxpNode)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":240
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":264
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":343
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":760
      }
    ],
    "LISTENERS":[
    ]
  },
  "conf.list_config_nodes":{
    "DESCRIPTION":"Hook used to gather the various nodes displayed in the 'Settings' panel hierarchy.",
    "PARAMETERS":[
      {
        "NAME":"rootNodes",
        "TYPE":"Array",
        "DESCRIPTION":"The array containing all first-level nodes of the tree, callbacks can append some nodes here."
      }
    ],
    "PARAMETER_SAMPLE":"array(&$rootNodes)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.boaconf\/ConfAccessDriver.class.php",
        "LINE":308
      }
    ],
    "LISTENERS":[
    ]
  },
  "node.before_change":{
    "DESCRIPTION":"Hook triggered before the content of a node is updated",
    "PARAMETERS":[
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Node that will be updated"
      }
    ],
    "PARAMETER_SAMPLE":"array(&$node)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":362
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":615
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":619
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1446
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1485
      },
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":1831
      },
      {
        "FILE":"\/plugins\/meta.user\/UserMetaManager.class.php",
        "LINE":199
      }
    ],
    "LISTENERS":[
    ]
  },
  "dl.localname":{
    "DESCRIPTION":"Hook triggered just before triggering a browser download, with the ability to change the name as it will be sent to the user.",
    "PARAMETERS":[
      {
        "NAME":"name",
        "TYPE":"String",
        "DESCRIPTION":"Current local name to be updated."
      }
    ],
    "PARAMETER_SAMPLE":"array($origFile, &$localName, $origWrapperData[\"classname\"])",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/access.fs\/FsAccessDriver.class.php",
        "LINE":236
      },
      {
        "FILE":"\/plugins\/core.access\/AbstractAccessDriver.class.php",
        "LINE":159
      }
    ],
    "LISTENERS":[
    ]
  },
  "version.commit_file":{
    "DESCRIPTION":"Hook triggered to force a versioning mechanism to commit a version of a file.",
    "PARAMETERS":[
      {
        "NAME":"meta_file",
        "TYPE":"String",
        "DESCRIPTION":"Metadata file"
      },
      {
        "NAME":"node",
        "TYPE":"BoA\\Core\\Xml\\ManifestNode",
        "DESCRIPTION":"Node that will be updated"
      }
    ],
    "PARAMETER_SAMPLE":"array($metaFile, $ajxpNode)",
    "TRIGGERS":[
      {
        "FILE":"\/plugins\/metastore.serial\/SerialMetaStore.class.php",
        "LINE":280
      }
    ],
    "LISTENERS":[
    ]
  }
}